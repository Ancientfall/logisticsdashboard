server {
    server_name bpsolutionsdashboard.com www.bpsolutionsdashboard.com;
    
    # Document root for static files
    root /var/www/logisticsdashboard;
    index index.html index.htm;
    
    # Security headers for better categorization
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Application-Type "Business-Analytics-Dashboard" always;
    add_header X-Industry "Energy-Oil-Gas-Logistics" always;
    add_header X-Purpose "Internal-Business-Operations" always;
    
    # Cache-busting headers for all content
    add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0" always;
    add_header Pragma "no-cache" always;
    add_header Expires "-1" always;
    add_header Last-Modified $date_gmt always;
    add_header ETag "\"v2.1.1-$msec\"" always;
    
    # Static files - serve directly
    location / {
        try_files $uri $uri/ /index.html;
        
        # Disable caching for all files
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires "-1" always;
    }
    
    # Static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
    }
    
    # API endpoints return 404 (no backend needed for React-only app)
    location /api/ {
        return 404;
    }
    
    # Health check endpoint
    location /health {
        return 200 '{"status":"ok","timestamp":"now"}';
        add_header Content-Type application/json;
    }

    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/bpsolutionsdashboard.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/bpsolutionsdashboard.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.bpsolutionsdashboard.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = bpsolutionsdashboard.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name bpsolutionsdashboard.com www.bpsolutionsdashboard.com;
    return 404; # managed by Certbot
}